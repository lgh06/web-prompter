{"version":3,"sources":["pages/TopicsPageMQTT.js"],"names":["cryptojs","require","TopicsPage","useRouteMatch","path","url","console","log","cloudbase","app","init","env","auth","persistence","login","a","anonymousAuthProvider","signIn","signInResp","getLoginState","loginState","isAnonymous","useEffect","productKey","deviceName","Date","now","random","content","HmacSHA1","toString","db","database","devices","collection","where","deviceId","get","result","http","post","then","response","dbLogics","to","exact","Topic","topicId","useParams"],"mappings":"qbAuBMA,GADOC,EAAQ,KACJA,EAAQ,MAIV,SAASC,IAAc,IAAD,EACjBC,cAAbC,EAD8B,EAC9BA,KAAMC,EADwB,EACxBA,IACXC,QAAQC,IAAIC,KACZ,IAAMC,EAAMD,IAAUE,KAAK,CACzBC,IAAK,qCAEHC,EAAOH,EAAIG,KAAK,CAACC,YAAa,UANC,SASpBC,IAToB,2EASnC,8BAAAC,EAAA,sEAC2BH,EAAKI,wBAAwBC,SADxD,cACQC,EADR,gBAG2BN,EAAKO,gBAHhC,OAGQC,EAHR,OAIEd,QAAQC,IAAIW,EAAYE,EAAWC,aAJrC,4CATmC,sBAkFnC,OAlEAC,qBAAU,WAAM,IAMNC,EACL,cADgCC,EACG,MAAQC,KAAKC,MAPrC,EASa,CAAC,GAAD,OAAIF,EAAJ,YAAkBD,GAAcE,KAAKC,OAA/CC,EATH,KAWRC,EAAO,oBACXJ,EADW,qBAEAD,EAFA,iBAEmBI,GACV3B,EAAS6B,SAASD,EAPtB,oBAO6CE,WAdjD,4CA6Cd,gCAAAf,EAAA,6DACED,IACMiB,EAAKtB,EAAIuB,WACTC,EAAUF,EAAGG,WAAW,WAHhC,SAIuBD,EAAQE,MAAM,CAACC,SAAU,SAASC,MAJzD,OAIQC,EAJR,OAKEhC,QAAQC,IAAI,oBAAqB+B,GAEjCC,IAAKC,KAAK,8EAA8E,CAAChB,WAAY,OAAQC,KAAKC,QAAQe,MAAK,SAAAC,GAC7HpC,QAAQC,IAAImC,MARhB,4CA7Cc,sBA4Dd,OA5Dc,mCAwDdC,GAIO,eAIN,IAGD,gCACE,wCAEA,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAE,UAAKvC,EAAL,eAAR,0BAEF,6BACE,cAAC,IAAD,CAAMuC,GAAE,UAAKvC,EAAL,kBAAR,iCAUJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwC,OAAK,EAACzC,KAAMA,EAAnB,SACE,0DAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,aAAX,SACE,cAAC0C,EAAD,YAOV,SAASA,IAAS,IACVC,EAAYC,cAAZD,QACN,OAAO,sDAAyBA","file":"static/js/2.8a181331.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n// import './App.css'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\n// https://cloud.tencent.com/document/product/876/19363\r\n// https://console.cloud.tencent.com/tcb/env/login\r\n// https://docs.cloudbase.net/api-reference/webv2/initialization.html\r\nimport cloudbase from \"@cloudbase/js-sdk\";\r\nimport { http } from \"../helpers\";\r\n\r\n// node引入包名\r\n// 浏览器、微信小程序，支付宝小程序引入./dist编译的js文件\r\n//  js版本下载地址：\r\n//  https://github.com/aliyun/alibabacloud-iot-device-sdk/\r\n//  https://github.com/mqttjs/MQTT.js/tree/v3.0.0\r\n// const iot = require('alibabacloud-iot-device-sdk/dist/alibabacloud-iot-device-sdk.js');\r\nconst mqtt = require('mqtt');\r\nconst cryptojs = require('crypto-js');\r\n\r\n\r\n// https://reactrouter.com/web/example/nesting\r\nexport default function TopicsPage() {\r\n  let {path, url} = useRouteMatch();\r\n  console.log(cloudbase)\r\n  const app = cloudbase.init({\r\n    env: 'hello-cloudbase-4go22m4jaa7a36e5' // 您的环境id\r\n  })\r\n  var auth = app.auth({persistence: 'local'});\r\n\r\n\r\n  async function login(){\r\n    const signInResp = await auth.anonymousAuthProvider().signIn();\r\n    // 匿名登录成功检测登录状态isAnonymous字段为true\r\n    const loginState = await auth.getLoginState();\r\n    console.log(signInResp, loginState.isAnonymous); // true\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    // TODO fingerprintjs, clientjs or their alternatives\r\n    // TODO multiple devices, as remote control device and display device.\r\n    // TODO localStorage\r\n    // TODO username and password , or Google / Github Login\r\n    const [ productKey, productSecret, deviceName] = \r\n      ['a16ErpTCBWY', 'gKFpA0YgWsdVpb5U', 'ABC' + Date.now()];\r\n\r\n    const [clientId, random] = [`${deviceName}.${productKey}`, Date.now()];\r\n\r\n    const content = `deviceName${\r\n      deviceName\r\n    }productKey${productKey}random${random}`;\r\n    const signedContent = cryptojs.HmacSHA1(content,productSecret).toString();\r\n    // const device = mqtt.connect(`wss://${productKey}.iot-as-mqtt.cn-shanghai.aliyuncs.com:443`,{\r\n    //   clientId: `${clientId}|securemode=-2,authType=regnwl,random=${random},signmethod=hmacsha1|`,\r\n    //   username: `${deviceName}&${productKey}`,\r\n    //   password: signedContent,\r\n    //   keepalive: 300,\r\n    // });\r\n    // get为订阅的信息\r\n    // data 为双向\r\n    // const sb = `/${productKey}/${deviceName}/user/data`;\r\n    // device.subscribe(sb , null , (...e) => {\r\n    //   console.log('inside subscribe', e)\r\n    // });\r\n    // device.on(`connect`, (...e) => {\r\n      // console.log(`connect successfully!`, e);\r\n      // update 为上报\r\n      // data为双向\r\n      // const id = setInterval(() => {\r\n      //   device.publish(`/${productKey}/${deviceName}/user/data`, `hello world!` + new Date(), (err) => {\r\n      //     if (err) {\r\n      //       clearInterval(id);\r\n      //     }\r\n      //   });\r\n      // }, 3000);\r\n    // });\r\n    // device.on('message', (topic, payload) => {\r\n    //   console.log(topic, payload.toString());\r\n    // });\r\n    // device.on('error', (err) => {\r\n    //   console.log('error:',err);\r\n    // });\r\n    async function dbLogics(){\r\n      login();\r\n      const db = app.database();\r\n      const devices = db.collection(\"devices\");\r\n      const result = await devices.where({deviceId: '0000'}).get();\r\n      console.log('tencent cloudbase', result)\r\n\r\n      http.post('https://service-ripfq8y3-1251786267.sh.apigw.tencentcs.com/release/register',{deviceName: 'test'+ Date.now()}).then(response => {\r\n        console.log(response)\r\n      })\r\n    }\r\n    dbLogics();\r\n\r\n    // clean up things when component destroyed.\r\n    // https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup \r\n    return () => { \r\n      // device.unsubscribe(sb, (...e)=>console.log('inside unsubscribe',e));\r\n      // device.end({force: true}, (...e)=>console.log('inside end',e))\r\n    }\r\n  }, []); // [] empty array \r\n  // see https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects\r\n  return (\r\n    <div>\r\n      <h2>Topics</h2>\r\n\r\n      <ul>\r\n        <li>\r\n          <Link to={`${url}/components`}>Components</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/props-v-state`}>\r\n            Props v. State\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* The Topics page has its own <Switch> with more routes\r\n          that build on the /topics URL path. You can think of the\r\n          2nd <Route> here as an \"index\" page for all topics, or\r\n          the page that is shown when no topic is selected */}\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <h3>Please select a topic.</h3>\r\n        </Route>\r\n        <Route path={`${path}/:topicId`}>\r\n          <Topic />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Topic() {\r\n  let { topicId } = useParams();\r\n  return <h3>Requested topic ID: {topicId}</h3>;\r\n}"],"sourceRoot":""}